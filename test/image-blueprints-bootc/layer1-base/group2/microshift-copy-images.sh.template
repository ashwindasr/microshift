#!/bin/bash
set -euo pipefail

STORAGE_DIR=/usr/lib/containers/storage
IMAGE_PULL_LIST="${IMAGE_PULL_LIST:-}"
IMAGE_LIST_FILE="${STORAGE_DIR}/image-list.txt"
PULL_SECRET="${PULL_SECRET:-/run/secrets/pull-secret.json}"

usage() {
    echo "Usage: $(basename "$0") <-pull | -copy>"
    echo "   -pull   Pull images specified in IMAGE_PULL_LIST environment, store them"
    echo "           at '${STORAGE_DIR}/<PULL_SPEC_SHA>' and create '${IMAGE_LIST_FILE}'"
    echo "           containing map of pulls specs and their SHA"
    echo "   -copy   Copy images from '${STORAGE_DIR}' to the local container storage"
    echo "           using '${IMAGE_LIST_FILE}' as a reference"
    exit 1
}

pull_images() {
    mkdir -p "${STORAGE_DIR}"
    for img in ${IMAGE_PULL_LIST} ; do
        local sha
        sha="$(sha256sum <<< "${img}" | awk '{print $1}')"
        for i in 1 2 3; do
            skopeo copy --all --preserve-digests \
                --authfile "${PULL_SECRET}" \
                "docker://${img}" "dir:${STORAGE_DIR}/${sha}" && break
            if [ ${i} -eq 3 ] ; then
                echo "ERROR: Failed to pull ${img} image after 3 attempts"
                exit 1
            fi
            echo "Attempt ${i} failed. Retrying in 5 seconds..." && sleep 5
        done
        echo "${img},${sha}" >> "${IMAGE_LIST_FILE}"
    done
}

copy_images() {
    while IFS="," read -r img sha ; do
        skopeo copy --preserve-digests \
            "dir:${STORAGE_DIR}/${sha}" \
            "containers-storage:${img}"
    done < "${IMAGE_LIST_FILE}"
}

case "${1:-}" in
-pull)
    pull_images
    ;;

-copy)
    copy_images
    ;;
*)
    usage
    ;;
esac
